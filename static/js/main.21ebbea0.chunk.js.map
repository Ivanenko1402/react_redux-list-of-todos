{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Option","actions","todo","type","payload","currentTodoReducer","state","action","defaultValue","query","status","value","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","setTodos","id","completed","title","className","classNames","onClick","TodoList","dispatch","useState","visibleTodos","setVisibleTodos","sortTodos","useCallback","correctListOfTodos","toLowerCase","includes","useEffect","length","map","val","targetTodo","find","setTargetTodo","TodoFilter","onSubmit","event","preventDefault","onChange","target","ALL","ACTIVE","COMPLETED","changeSelect","placeholder","changeQuery","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","Loader","TodoModal","user","setUser","isLoading","setIsLoading","setTargetUser","a","userId","newUser","Error","href","email","name","App","todosFromServer","loadingTodosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21ebbea0.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nenum Option {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query } = useAppSelector(state => state.filter);\n\n  const changeSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value === Option.ALL\n        || event.target.value === Option.ACTIVE\n        || event.target.value === Option.COMPLETED\n    ) {\n      dispatch(actions.setStatus(event.target.value));\n    }\n  };\n\n  const changeQuery = (event: ChangeEvent<HTMLInputElement>) => (\n    dispatch(actions.setQuery(event.target.value)));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => changeSelect(event)}\n          >\n            <option value={Option.ALL}>All</option>\n            <option value={Option.ACTIVE}>Active</option>\n            <option value={Option.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => changeQuery(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"delete\"\n              onClick={() => dispatch(actions.setQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = { type: 'currentTodo/SET'; payload: Todo; };\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype AddQuery = {\n  type: 'filter/QUERY',\n  payload: string,\n};\n\ntype AddFilterValue = {\n  type: 'filter/STATUS',\n  payload: Status,\n};\n\ntype Action = AddQuery | AddFilterValue;\n\nconst setQuery = (value: string): AddQuery => (\n  { type: 'filter/QUERY', payload: value }\n);\nconst setStatus = (value: Status): AddFilterValue => (\n  { type: 'filter/STATUS', payload: value }\n);\n\nconst defaultValue = {\n  query: '',\n  status: 'all',\n};\n\nexport const actions = { setQuery, setStatus };\n\nconst filterReducer = (state = defaultValue, action: Action) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddAction = { type: 'todos/LOADING', payload: Todo[] };\nconst setTodos = (todos: Todo[]) => ({ type: 'todos/LOADING', payload: todos });\n\nexport const actions = { setTodos };\n\nconst todosReducer = (todos: Todo[] = [], action: AddAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/LOADING':\n      return [...action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setTodos: (val: number) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo, setTodos }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { id, completed, title } = todo;\n\n  return (\n    <tr\n      className={classNames({\n        'has-background-info-light': currentTodo?.id === id,\n      })}\n      data-cy=\"todo\"\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setTodos(id)}\n\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye-slash': currentTodo?.id === id,\n              'far fa-eye': currentTodo?.id !== id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([...todos]);\n\n  const sortTodos = useCallback(() => {\n    let correctListOfTodos;\n\n    switch (status) {\n      case 'active':\n        correctListOfTodos = [...todos].filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        correctListOfTodos = [...todos].filter(todo => todo.completed);\n        break;\n\n      default:\n        correctListOfTodos = [...todos];\n        break;\n    }\n\n    setVisibleTodos(correctListOfTodos.filter(todo => (\n      todo.title.toLowerCase()).includes(query.toLowerCase())));\n  }, [query, status]);\n\n  useEffect(() => {\n    sortTodos();\n  }, [sortTodos]);\n\n  function setTargetTodo(id: number) {\n    const targetTodo = todos.find(todo => todo.id === id);\n\n    if (targetTodo) {\n      dispatch(actions.setTodo(targetTodo));\n    }\n  }\n\n  return (\n    <>\n      {!visibleTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map(todo => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                setTodos={(val) => setTargetTodo(val)}\n              />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const targetTodo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const setTargetUser = useCallback(async () => {\n    if (!targetTodo) {\n      setUser(null);\n\n      return;\n    }\n\n    setIsLoading(true);\n    const newUser = await getUser(targetTodo.userId);\n\n    try {\n      setUser(newUser);\n    } catch {\n      throw new Error();\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    setTargetUser();\n  }, [setTargetUser]);\n\n  if (targetTodo === null) {\n    return <></>;\n  }\n\n  const { id, title, completed } = targetTodo;\n\n  function removeTargetTodo() {\n    dispatch(actions.removeTodo());\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"button\"\n              onClick={removeTargetTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )\n              }\n              {' by '}\n              {user && <a href={`mailto:${user.email}`}>{user.name}</a>}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport { useDispatch } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const targetTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  async function loadingTodosFromServer() {\n    setIsLoading(true);\n\n    const todosFromServer = await getTodos();\n\n    try {\n      dispatch(actions.setTodos(todosFromServer));\n    } catch (error) {\n      throw new Error();\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadingTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : <TodoList /> }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {targetTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}